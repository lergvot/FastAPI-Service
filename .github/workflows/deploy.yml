# deploy.yml
name: Deploy fastapi-service

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy pipeline
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Deploy to server
        id: deploy
        uses: appleboy/ssh-action@master
        continue-on-error: true
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB
          script: |
            cd /opt/fastapi-service
            echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ main"
            git fetch origin main --depth=1
            git reset --hard FETCH_HEAD
            git clean -xfd

            echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
            docker compose -f Docker/docker-compose.yml down --remove-orphans

            echo "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫..."
            docker compose -f Docker/docker-compose.yml up -d --build

            sleep 10
            echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
            if ! docker compose -f Docker/docker-compose.yml ps --services --filter status=running | grep -q "postgres-db"; then
              echo "‚ùå –û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å postgres-db –Ω–µ –∑–∞–ø—É—â–µ–Ω"
              exit 1
            fi
            if ! docker compose -f Docker/docker-compose.yml ps --services --filter status=running | grep -q "fastapi-service"; then
              echo "‚ùå –û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å fastapi-service –Ω–µ –∑–∞–ø—É—â–µ–Ω"
              exit 1
            fi
            if ! docker compose -f Docker/docker-compose.yml ps --services --filter status=running | grep -q "nginx-fastapi"; then
              echo "‚ùå –û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å nginx-fastapi –Ω–µ –∑–∞–ø—É—â–µ–Ω"
              exit 1
            fi

            echo "‚úÖ Deployment completed"
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

      - name: Report Status
        uses: ./.github/actions/ci-report
        with:
          status: ${{ steps.deploy.outcome }}
          ci_secret: ${{ secrets.CI_SECRET }}
          ci_endpoint: ${{ secrets.CI_ENDPOINT }}

# tests.yml
name: Run Tests

on:
  push:
    branches: [dev]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13.3"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run tests with coverage
      id: pytest_step
      run: coverage run -m pytest -v tests --disable-warnings

    - name: Generate coverage report
      run: |
        coverage report -m
        echo "Total coverage: $(coverage report | tail -n 1 | awk '{print $4}')"

    - name: Set CI status env
      run: echo "STATUS=‚úÖ –£—Å–ø–µ—à–Ω–æ">> $GITHUB_ENV
    
    - name: Prepare CI payload
      id: prepare_payload
      run: |
        echo "–°–æ–∑–¥–∞—ë–º JSON –¥–ª—è CI-—Ä–µ–ø–æ—Ä—Ç–∞"
        echo '{
          "secret": "'"${{ secrets.CI_SECRET }}"'",
          "project": "'"${{ github.repository }}"'",
          "status": "'"$STATUS"'",
          "commit": "'"$(git rev-parse --short HEAD)"'",
          "author": "'"${{ github.actor }}"'",
          "branch": "'"${{ github.ref_name }}"'",
          "workflow": "'"${{ github.workflow }}"'",
          "event_name": "'"${{ github.event_name }}"'",
          "message": "'"${{ github.event.head_commit.message }}"'",
          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
          "repo_url": "https://github.com/${{ github.repository }}"
        }' > ci_payload.json
        echo "payload_file=ci_payload.json">> $GITHUB_OUTPUT

    - name: Send CI Report to Telegram Bot
      env:
        CI_ENDPOINT: ${{ secrets.CI_ENDPOINT }}
      run: |
          echo "üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º CI-–æ—Ç—á—ë—Ç..."
          PAYLOAD_FILE="${{ steps.prepare_payload.outputs.payload_file }}"
          echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª: $PAYLOAD_FILE"
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$CI_ENDPOINT" \
            -H "Content-Type: application/json" \
            -d @"$PAYLOAD_FILE")

          echo "HTTP_CODE=$HTTP_CODE"
          if [[ "$HTTP_CODE" -ne 200 ]]; then
            echo "::warning::CI report failed with HTTP $HTTP_CODE"
            exit 1
          else
            echo "‚úÖ CI-–æ—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: $HTTP_CODE"
          fi
